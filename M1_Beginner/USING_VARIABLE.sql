#SETTING VARIABLES

SET @VAR_STRING = 'MY_VAR'
SET @VAR_NUM = '2'
SET @VAR_DATE = '2015-07-20'

#WE CAN SET VATIABLE IN SELECT STATEMENT USING :=
SELECT @VAR := '123'




SET @START_DATE = '2022-01-23'
SET @END_DATE = '2015-07-1'


#THIS GETS THE YEAR MONTH VALUE TO USE AS THE PARTITION NAMES
SET @START_YEARMONTH = (SELECT EXTRACT(YEAR_MONTH FROM @START_DATE))
SET @END_YEARMONTH = (SELECT EXTRACT(YEAR_MONTH FROM @END_DATE))

#PUT THE PARTITIONS INTO A VARIABLE
SELECT GROUP_CONCAT(PARTITION_NAME)
FROM information_schema.PARTITIONS p 
WHERE TABLE_NAME = 'partitioned_table'
AND SUBSTRING_INDEX(partition_name,'P',-1) BETWEEN @START_YEARMONTH AND @END_YEARMONTH
INTO @partitions

SET @QUERY = 
CONCAT('CREATE TABLE part_of_partitioned_table' (PRIMARY KEY(id))
SELECT partitioned_table.*
FROM partitioned_table PARTITION(',@partitions',')
JOIN users u USING(user_id)
WHERE date(partitioned_table.date) BETWEEN ',@START_DATE,' AND',@END_DATE);


#PREPARE THE STATEMENT FROM @QUERY
PREPARE stmt FROM @query;

#DROP TABLE
DROP TABLE IF EXISTS tech.part_of_partitioned_table

#CREATE TABLE USING STATEMENT
EXECUTE stmt;

#1.2
# ROW NUMBER AND GROUP BY USING VARIABLES IN SELECT STATEMENT 
CREATE TABLE TEAM_PERSON AS SELECT 'A' TEAM , 'JOHN' PERSON
UNION ALL SELECT 'B' TEAM , 'SMITH' PERSON 
UNION ALL SELECT 'A' TEAM , 'WALTER' PERSON
UNION ALL SELECT 'A' TEAM , 'LOUIS' PERSON 
UNION ALL SELECT 'C' TEAM , 'ELIZABETH' PERSON
UNION ALL SELECT 'B' TEAM , 'WAYNE' PERSON 

#TO SELECT THE TABLE TEAM_PERSON WITH ADDITIONAL ROW_NUMBER COLUMN , EITHER
SELECT @ROW_NO := @ROW_NO+1 AS ROW_NUMBER , TEAM ,PERSON
FROM TEAM_PERSON ,(SELECT @ROW_NO := 0 ) T;

(OR)

SET @ROW_NO := 0 ;
SELECT @ROW_NO := @ROW_NO + 1 AS ROW_NUMBER , TEAM , PERSON
FROM TEAM_PERSON ;


SELECT @ROW_NO := IF (@PREV_VAL = T.TEAM,@ROW_NO+1,1) AS ROW_NUMBER,
@PREV_VAL := T.TEAM AS TEAM,
T.PERSON
FROM TEAM_PERSON tp ,
(SELECT @ROW_NO := 0 ) X,
(SELECT @PREV_VAL := '') Y
ORDER BY T.TEAM ASC , T.PERSON DESC;









